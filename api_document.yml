openapi: '3.0.3'
info:
  title: Laravel RestAPI
  version: '1.0'
servers:
  - url: http://127.0.0.1:8000/
tags:
  - name: user
  - name: service
paths:
  /user/register:
    post:
      tags:
        - user
      summary: Sign up user
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/userRegisterForm'
        required: true
      responses:
        '200':
          description: Success store the user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiResponse'
        '302':
          description: Failed to create user
        '422':
          description: Content cannot be processed
  /user/login:
    post:
      tags:
          - user
      summary: Sign in user
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/userLoginForm'
        required: true
      responses:
        '200':
          description: Successful login with JWT Token
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apiResponse'
                  - properties:
                      data:
                        type: object
                        properties:
                          token:
                            type: string
        '401':
          description: Invalid credentials
        '422':
          description: Content cannot be processed
  /user/myprofile:
    get:
      tags:
        - user
      summary: Get a user with JWT
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: JWT Bearer Token
      responses:
        '200':
          description: Successful get a user record
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apiResponse'
                  - properties:
                      data:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              id:
                                type: string
                              nim:
                                type: string
                              name:
                                type: string
                              email:
                                type: string
                              phone:
                                type: string
                              role:
                                type: string
        '401':
          description: Token invalid
  /user:
    get:
      tags:
        - user
      summary: Get all user if the user is admin
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: JWT Bearer Token
      responses:
        '200':
          description: Successfull get all user
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apiResponse'
                  - properties:
                      data:
                        type: object
                        properties:
                          users:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                nim:
                                  type: string
                                name:
                                  type: string
                                email:
                                  type: string
                                phone:
                                  type: string
                                role:
                                  type: string

        '403':
          description: Forbidden access
  /user/logout:
    post:
      tags:
        - user
      summary: Logout current user
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: JWT Bearer Token
      responses:
        '200':
          description: Success logout current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiResponse'
        '401':
          description: Unauthorized

  /service/buy:
    post:
      tags:
        - service
      summary: Buy a service
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: JWT Bearer Token
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/buyServiceForm'
      responses:
        '200':
          description: Success buy a service
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apiResponse'
                  - properties:
                      data:
                        type: object
                        properties:
                          order_id:
                            type: string
                          gross_amount:
                            type: integer
                          transaction_status:
                            type: string
                          va_number:
                            type: integer
                          bank:
                            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden access
        '500':
          description: Server internal error
  /service:
    get:
      tags:
        - service
      summary: Get all service UPA Bahasa have
      responses:
        '200':
          description: Success get all services
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/apiResponse'
                  - properties:
                      data:
                        properties:
                          services:
                            type: array
                            items:
                              properties:
                                name:
                                  type: string
        '404':
          description: Not found
        '500': 
          description: Server internal error
                          
components:
  schemas:
    user:
      type: object
      properties:
        name:
          type: string
        email: 
          type: string
        role:
          type: string
    userRegisterForm:
      type: object
      properties:
        name:
          type: string
          example: "Ardimas"
        email:
          type: string
          example: "ardimas@gmail.com"
        nim:
          type: string
          nullable: true
          description: For UPNVJ academic
        phone:
          type: number
        password:
          type: string
          example: "tester123"
        password_confirmation:
          type: string
          example: "tester123"
        role_id:
          type: integer
          description: "Took foreign key to role entities"
          example: "1"
    userLoginForm:
      type: object
      properties:
        email: 
          type: string
        password:
          type: string
    apiResponse:
      type: object
      properties:
        error:
          type: boolean
        data:
          type: object
          properties:
            message:
              type: string
    buyServiceForm:
      type: object
      properties:
        user_id:
          type: string
        service_id:
          type: integer
        bank:
          type: string
                

                




